#!/usr/bin/env python
# -*- python -*-
#
#  @file template.py
#  @brief doil servant class template
#  @date $Date$
#  @author Noriaki Ando <n-ando@aist.go.jp>
# 
#  Copyright (C) 2008
#      Task-intelligence Research Group,
#      Intelligent Systems Research Institute,
#      National Institute of
#          Advanced Industrial Science and Technology (AIST), Japan
#      All rights reserved.
# 
#  $Id$
# 


#
# doil servant header file template
#
# Given keys.
# - servant_name   : doil servant class name
# - iface_name : interface class name to be delegated by this servant
# - include_guard  : include guard definition name
# - fq_POA_name    : fully qualified POA name
# - operations     : operation definitions
#
servant_def = """\
// -*- C++ -*-
/*!
 * @@file @servant_name@.h
 * @@brief @iface_name@ CORBA servant for doil
 * @@date $Date$
 * @@author This file was automatically generated by omniidl/doil backend
 *
 * $Id$
 */
#ifndef @include_guard@
#define @include_guard@

#include <coil/Properties.h>

namespace doil
{
  class ImplBase;
};

@iface_ns@
  class @iface_name@;
@iface_ns_end@
@servant_ns@
  class @servant_name@
   : public virtual @corba_poa_name@,
     public virtual doil::CORBA::CORBAServantBase
  {
  public:
    @servant_name@(doil::ImplBase* impl);
    virtual ~@servant_name@();

    @operations@
  private:
    @iface_name@* m_impl;
  };
@servant_ns_end@

extern "C"
{
  @servant_name@CORBAInit(coil::Properties& prop);
};
#endif // @include_guard@
"""

#
# doil servant code file template
#
# Given keys.
# - servant_name   : doil servant class name
# - iface_name : interface class name to be delegated by this servant
# - include_guard  : include guard definition name
# - fq_POA_name    : fully qualified POA name
# - operations     : operation definitions
#
servant_code = """\
// -*- C++ -*-
/*!
 * @@file @servant_name@.cpp
 * @@brief @iface_name@ CORBA servant for doil
 * @@date $Date$
 * @@author This file was automatically generated by omniidl/doil backend
 *
 * $Id$
 */

#include <doil/ImplBase.h>
#include <doil/corba/CORBAManager.h>
#include <@iface_h_path@>
#include <@servant_h_path@>

@servant_ns@
  @servant_name@::@servant_name@(doil::ImplBase* impl)
   : m_impl(NULL)
  {
    m_impl = dynamic_cast<@iface_name@*>(impl);
    if (m_impl == NULL) throw std::bad_alloc();
    m_impl->incRef();
  }

  @servant_name@::~@servant_name@()
  {
    m_impl->decRef();
  }

@operations@
@servant_ns_end@

extern "C"
{
  @servant_name@CORBAInit(coil::Properties& prop)
  {
    doil::CORBA::CORBAManager& mgr(doil::CORBA::CORBAManager::instance());
    mgr.registerFactory("@servant_name@",
                        doil::New<@servant_name@>,
                        doil::Delete<@servant_name@>);
  }
};
"""

