## -*- Makefile -*-
##------------------------------------------------------------
## Makefile.am for libRTC
##
## $Id$
##------------------------------------------------------------

AUTOMAKE_OPTIONS = 1.4

ARTLIB = @ARTLIB@
SUBDIRS = idl . ext @UNITTEST@

AM_CPPFLAGS=-I$(top_srcdir)/src -I$(top_srcdir)/src/lib -I$(top_srcdir)/src/lib/coil/include -I$(top_srcdir)/src/lib/rtm -I$(top_srcdir)/src/lib/rtm/idl
AM_LDFLAGS=-L$(top_builddir) -L$(top_builddir)/src/lib/rtm -L$(top_builddir)/src/lib/rtm/idl -L$(top_builddir)/src/lib/coil/lib

# version.h would be generated from configure before lib build process.
BUILT_SOURCES = version.h version.txt config_rtc.h.org
version.h: Makefile.am Makefile.in
	echo '// This header file is automatically generated.' > $@
	echo '// Do not edit this file.' >> $@
	echo '' >> $@
	echo '#ifndef INCLUDE_GUARD_VERSION_H' >> $@
	echo '#define INCLUDE_GUARD_VERSION_H' >> $@
	echo '' >> $@
	echo 'static const char* openrtm_name    = "'${PACKAGE}'-'${VERSION}'";' >> $@
	echo 'static const char* openrtm_version = "'${VERSION}'";' >> $@
	echo 'static const char* corba_name      = "'${ORB}'";' >> $@
	echo '' >> $@
	echo '#endif // INCLUDE_GUARD_VERSION_H' >> $@

version.txt:
	echo 'name = '${PACKAGE}'-'${VERSION} >> $@
	echo 'language = C++' >> $@
	echo 'version = '${RTM_VERSION}'' >> $@
	echo 'major_version = '${RTM_MAJOR_VERSION} >> $@
	echo 'minor_version = '${RTM_MINOR_VERSION} >> $@
	echo 'revision_num = '${RTM_REVISION_NUM} >> $@
	echo 'short_version = '${RTM_SHORT_VERSION} >> $@
	echo 'corba = '${ORB} >> $@

config_rtc.h.org:
	mv config_rtc.h config_rtc.h.org
	awk '/^#define/{printf("#ifndef %s\n%s\n#endif // %s\n",$$2,$$0,$$2);} !/^#define/{print $$0;}' config_rtc.h.org > config_rtc.h

# libRTC.so, libRTC.a library build entry
lib_LTLIBRARIES = libRTC.la

# sources of libRTC.la
#	ExecutionContext.cpp
#	PortProfileHelper.cpp
#	ObjectManager.cpp

UTIL_SRC =            \
	CORBA_IORUtil.cpp \
	NVUtil.cpp        \
	RTCUtil.cpp       \
	DefaultPeriodicTask.cpp \
	CORBA_RTCUtil.cpp

MGR_SRC =                        \
	FactoryInit.cpp              \
	CorbaNaming.cpp              \
	Factory.cpp                  \
	ECFactory.cpp                \
	Manager.cpp                  \
	ManagerConfig.cpp            \
	ModuleManager.cpp            \
	NamingManager.cpp            \
	NumberingPolicy.cpp          \
	NodeNumberingPolicy.cpp          \
	NamingServiceNumberingPolicy.cpp          \
	ManagerServant.cpp           \
	SystemLogger.cpp             \
	LogstreamFile.cpp               \
	LocalServiceAdmin.cpp        \
	ManagerActionListener.cpp

COMP_SRC =                       \
	DataFlowComponentBase.cpp    \
	ExecutionContextBase.cpp     \
	ExecutionContextProfile.cpp  \
	RTObjectStateMachine.cpp     \
	ExecutionContextWorker.cpp   \
	PeriodicExecutionContext.cpp \
	ExtTrigExecutionContext.cpp  \
	OpenHRPExecutionContext.cpp  \
	PortAdmin.cpp                \
	RTObject.cpp                 \
	Macho.cpp                    \
	ConfigAdmin.cpp              \
	ComponentActionListener.cpp  \
	FsmActionListener.cpp        \
	ConfigurationListener.cpp    \
	SdoConfiguration.cpp         \
	SdoServiceAdmin.cpp          \
	SdoOrganization.cpp          \
	PeriodicECSharedComposite.cpp\
	SimulatorExecutionContext.cpp 

PORT_SRC =                       \
	InPortConnector.cpp          \
	OutPortConnector.cpp         \
	OutPortPullConnector.cpp     \
	OutPortPushConnector.cpp     \
	InPortPullConnector.cpp      \
	InPortPushConnector.cpp      \
	ConnectorListener.cpp        \
	PortConnectListener.cpp      \
	CorbaPort.cpp                \
	InPortBase.cpp               \
	InPortProvider.cpp           \
	OutPortBase.cpp              \
	OutPortProvider.cpp          \
	PortBase.cpp                 \
	PublisherFlush.cpp           \
	PublisherNew.cpp             \
	PublisherPeriodic.cpp        \
	CdrRingBuffer.cpp            \
	InPortCorbaCdrProvider.cpp   \
	OutPortCorbaCdrConsumer.cpp  \
	OutPortCorbaCdrProvider.cpp  \
	InPortCorbaCdrConsumer.cpp   \
	InPortDirectProvider.cpp     \
	InPortDirectConsumer.cpp     \
	InPortSHMConsumer.cpp        \
	InPortSHMProvider.cpp        \
	OutPortSHMConsumer.cpp       \
	OutPortSHMProvider.cpp       \
	OutPortDirectConsumer.cpp    \
	OutPortDirectProvider.cpp    \
	SharedMemoryPort.cpp


RTC_SRC = \
	$(UTIL_SRC) $(MGR_SRC) $(COMP_SRC) $(PORT_SRC)


libRTC_la_SOURCES = \
	version.h \
	version.txt \
	$(UTIL_SRC) $(MGR_SRC) $(COMP_SRC) $(PORT_SRC)

#------------------------------
# Component observer embedded
if ENABLE_OBSERVER
FactoryInit.cpp: ComponentObserverConsumer.h ComponentObserverSkel.h 
OBSERVER_LA = \
	libComponentObserverStub.la \
	libComponentObserverConsumer.la
OBSERVER_LIB = \
	$(top_builddir)/src/ext/sdo/observer/libComponentObserverStub.la \
	$(top_builddir)/src/ext/sdo/observer/libComponentObserverConsumer.la
OBSERVER_LDFLAGS = -L$(top_builddir)/src/ext/sdo/observer
endif
libComponentObserverStub.la:
	(cd $(top_builddir)/src/ext/sdo/observer ; make)
libComponentObserverConsumer.la: libComponentObserverStub.la
	(cd $(top_builddir)/src/ext/sdo/observer ; make)
ComponentObserverConsumer.h: ComponentObserverSkel.h
ComponentObserverSkel.h:
	(cd $(top_builddir)/src/ext/sdo/observer ; make)


#------------------------------

libRTC_la_LIBADD = \
	$(top_builddir)/src/lib/coil/lib/libcoil.la \
	$(top_builddir)/src/lib/rtm/idl/libRTCSkel.la \
	$(OBSERVER_LIB)

libRTC_la_DEPENDENCIES = \
	$(OBSERVER_LA)
libRTC_la_LDFLAGS =                   \
	-no-undefined                     \
	-L$(top_builddir)/src/lib/rtm/idl \
	-release $(PACKAGE_VERSION)       \
	$(OBSERVER_LDFLAGS)

rtmheaderdir = $(rtm_includedir)/rtm

rtmheader_HEADERS = \
	$(libRTC_la_SOURCES:.cpp=.h) \
	BufferBase.h 		 \
	BufferStatus.h 		 \
	CORBA_SeqUtil.h 	 \
	CdrBufferBase.h 	 \
	ConnectorBase.h 	 \
	CorbaConsumer.h 	 \
	DataInPort.h 		 \
	DataOutPort.h 		 \
	DataPortStatus.h 	 \
	DefaultConfiguration.h 	 \
	DirectInPortBase.h 	 \
	DirectOutPortBase.h 	 \
	DirectPortBase.h 	 \
	ExecutionContextBase.h 	 \
	EventPort.h				 \
	InPort.h 		 \
	InPortConsumer.h 	 \
	NumberingPolicyBase.h    \
	NamingServiceNumberingPolicy.h    \
	NodeNumberingPolicy.h    \
	ObjectManager.h 	 \
	OutPort.h 		 \
	OutPortConsumer.h 	 \
	PeriodicTaskFactory.h 	 \
	PortCallback.h 		 \
	PublisherBase.h 	 \
	RTC.h 			 \
	RingBuffer.h 		 \
	SdoServiceProviderBase.h \
	SdoServiceConsumerBase.h \
	StateMachine.h 		 \
	StaticFSM.h			\
	Typename.h               \
	Timestamp.h		 \
	LocalServiceBase.h	 \
	LogstreamBase.h      \
	ListenerHolder.h         \
	config_rtc.h


#------------------------------------------------------------
# File list for deb/ports packages
#------------------------------------------------------------
lst:
	echo $(RTC_SRC) > src.lst
	echo $(rtmheader_HEADERS) > header.lst
	echo version.txt >> header.lst

#------------------------------------------------------------
# Visual Studio Project
#------------------------------------------------------------
win32_builddir = $(top_builddir)/win32/OpenRTM-aist/

vcproj: vc9proj vcxproj

vc9proj: libRTC.vcproj.yaml
	$(top_builddir)/build/vcprojtool.py vcproj \
		--type DLL \
		--vcversion "9.00" \
		--version $(RTM_VERSION) \
		--out $(win32_builddir)/rtm/libRTC_vc9.vcproj \
		--yaml libRTC.vcproj.yaml \
		--source $(RTC_SRC) \
		--header $(rtmheader_HEADERS)
	qkc -O- -sm $(win32_builddir)/rtm/libRTC_vc9.vcproj

vcxproj: libRTC.vcproj.yaml
	for ver in $(VC_VERSION); do \
		$(top_builddir)/build/vcxprojtool.py vcxproj \
			--type DLL \
			--vcversion "$${ver}.00" \
			--version $(RTM_VERSION) \
			--out $(win32_builddir)/rtm/libRTC_vc$${ver}.vcxproj \
			--yaml libRTC.vcproj.yaml \
			--source $(RTC_SRC) \
			--header $(rtmheader_HEADERS) ; \
		qkc -O- -sm $(win32_builddir)/rtm/libRTC_vc$${ver}.vcxproj ; \
	done

dist-hook: lst vcproj

clean-local:
	rm -f config_rtc.h.org
	rm -f *~ Makefile.old *core
	rm -f *.lst
	rm -f *.gch *.bak *.rpo *.sym lib*.*_pure_*
	rm -f version.h version.txt

EXTRA_DIST = \
	$(rtmheader_HEADERS) \
	libRTC.vcproj.yaml

DIST_SUBDIRS = idl ext tests
