#----------------------------------------------------------------------
#
# RT-Component manager configuration
#
# Copyright (c) 2003-2007 Noriaki Ando <n-ando@aist.go.jp>
#      Task-intelligence Research Group,
#      Intelligent Systems Research Institute,
#      National Institute of
#          Advanced Industrial Science and Technology (AIST), Japan
#      All rights reserved.
#
# $Id: rtc.conf.sample,v 1.3.2.1 2007-09-26 07:43:51 n-ando Exp $
# 
#----------------------------------------------------------------------
#
# $Log: not supported by cvs2svn $
# Revision 1.3  2007/04/27 06:12:27  n-ando
# Configuration file example for OpenRTM-aist-0.4.0
#
# Revision 1.2  2007/01/14 23:33:31  n-ando
# Updated for OpenRTM-aist-0.4.0.
#
# Revision 1.1.1.1  2005/05/12 09:06:19  n-ando
# Public release.
#
#

#------------------------------------------------------------
# Configuration version (optional) 
#
config.version: 0.4

#------------------------------------------------------------
# OpenRTM-aist version (optional)
#
openrtm.version: 0.4.1

#------------------------------------------------------------
# The name of manager (default = manager)
#
manager.name: manager


#============================================================
# CORBA configuration
#============================================================
#
# ORB specific command line options given to ORB_init()
#
corba.args:
#
# ORB endpoint
# If you have two or more network interfaces, ORB endpoint address and/or
# port have to be specified. If hostname or port number is abbreviated,
# default interface or port number is used. At least one colon ':'
# is needed when you specify this option.
# example
# corba.endpoint: myhost:      (use myhost and default port)
# corba.endpoint: :9876        (use default addr and port 9876)
# corba.endpoint: myhost:9876  (use myhost and port 9876)
#
corba.endpoint:
#
# CORBA name server setting
# example
# corba.nameservers: openrtm.aist.go.jp:9876
# corba.nameservers: rtm0.aist.go.jp, rtm1.aist.go.jp, rtm2.aist.go.jp
#
# Multiple name servers can be specified separating by comma.
# If port number is abbreviated, default port number is used.
# The default port number is depend on ORB implementation.
#
corba.nameservers: localhost


#============================================================
# Naming configurations
#============================================================
#
# Enable/Disable naming functions
#
naming.enable: YES
#
# Naming Types
# Now only "corba" is supported.
#
naming.type: corba
#
# Naming format
#
# The name format of components that is bound to naming services.
# The delimiter between names is "/".
# The delimiter between name and kind is ".".
#
# example: (OpenRTM-aist-0.2.0 style)
#       %h.host_cxt/%M.mgr_cxt/%c.cat_cxt/%m.mod_cxt/%n.rtc
# This is formatted according to the following replacement rules.
#
# %n: The instance name of the component.
# %t: The type name of the component.
# %m: The module name of the component.
# %v: The version of the component.
# %V: The component vendor.
# %c: The category of the component.
# %h: The hostname.
# %M: The manager name.
# %p: PID of the manager.
#
naming.formats: %h.host_cxt/%M.mgr_cxt/%c.cat_cxt/%m.mod_cxt/%n.rtc
#
# Autoupdate to Naming Server
# Enable/Disable and update interval [s]
naming.update.enable: YES
naming.update.interval 10.0

# End of Naming configuration section
#------------------------------------------------------------

#============================================================
# Module management
#============================================================
#
#manager.modules.config_ext:
#manager.modules.config_path:
#manager.modules.detect_loadable:
#manager.modules.load_path:
#manager.modules.init_func_suffix:
#manager.modules.init_func_prefix:
#manager.modules.abs_path_allowed:
#manager.modules.download_allowed:
#manager.modules.download_dir:
#manager.modules.download_cleanup:
#manager.modules.preload:

#============================================================
# Logger configurations
#============================================================
#
# Enable/Disable logger [YES/NO]
logger.enable: YES
#
#------------------------------------------------------------
# Log file name (default = ./rtc%p.log)
# %p: PID
#
logger.file_name: ./rtc%p.log
#
#------------------------------------------------------------
# Log date format (default = %b %d %H:%M:%S)
#
# The following strftime(3) like format expression is available.
# If no prefix is needed, use "No" or "Disable".
# 
# %a abbreviated weekday name 
# %A full weekday name 
# %b abbreviated month name 
# %B full month name 
# %c the standard date and time string 
# %d day of the month, as a number (1-31) 
# %H hour, 24 hour format (0-23) 
# %I hour, 12 hour format (1-12) 
# %j day of the year, as a number (1-366) 
# %m month as a number (1-12).
#    Note: some versions of Microsoft Visual C++ may use values that range
#    from 0-11. 
# %M minute as a number (0-59) 
# %p locale's equivalent of AM or PM 
# %S second as a number (0-59) 
# %U week of the year, sunday as the first day 
# %w weekday as a decimal (0-6, sunday=0) 
# %W week of the year, monday as the first day 
# %x standard date string 
# %X standard time string 
# %y year in decimal, without the century (0-99) 
# %Y year in decimal, with the century 
# %Z time zone name 
# %% a percent sign 
#  
#
#logger.date_format: No
#logger.date_format: Disable
#logger.date_format: [%Y-%m-%dT%H.%M.%S%Z]     // W3C standard format
#logger.date_format: [%b %d %H:%M:%S]          // Syslog format
#logger.date_format: [%a %b %d %Y %H:%M:%S %Z] // RFC2822 format
#logger.date_format: [%a %b %d %H:%M:%S %Z %Y] // data command format
#logger.date_format: [%Y-%m-%d %H.%M.%S]
#
logger.date_format: %b %d %H:%M:%S
#
# Log level (default = NORMAL)
#
# The following LogLevels are allowed.
# SILENT, ERROR, WARN, NORMAL, INFO, DEBUG, TRACE, VERBOSE, PARANOID
#
#
# SILENT  : completely silent
# ERROR   : includes (ERROR)
# WARN    : includes (ERROR, WARN)
# INFO    : includes (ERROR, WARN, INFO)
# NORMAL  : includes (ERROR, WARN, INFO, NORMAL)
# DEBUG   : includes (ERROR, WARN, INFO, NORMAL, DEBUG)
# TRACE   : includes (ERROR, WARN, INFO, NORMAL, DEBUG, TRACE)
# VERBOSE : includes (ERROR, WARN, INFO, NORMAL, DEBUG, TRACE, VERBOSE)
# PARANOID: includes (ERROR, WARN, INFO, NORMAL, DEBUG, TRACE, VERBOSE, PARA)
#
# Warning!!!
# "TRACE", "VERBOSE", "PARANOID" logging level will create a huge log file!!
# "PARANOID" log level will tangle the log file.
#
logger.log_level: NORMAL
